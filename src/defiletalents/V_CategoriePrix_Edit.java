package defiletalents;

/**
 * Classe permettant de gérer la vue relative à un enregistrement de la table
 * tal_categorie_prix.
 *
 * @author giraudeaup
 */
public class V_CategoriePrix_Edit extends javax.swing.JDialog
{

    /**
     * Controleur de l'appli.
     */
    private Controller controller;
    /**
     * Mode de la vue.
     */
    private int mode = 0;
    /**
     * Identifiant de l'enregistrement de la vue.
     */
    private int id = 0;

    /**
     * Constructeur de la vue.
     *
     * @param controller
     */
    public V_CategoriePrix_Edit(Controller controller)
    {
        this.controller = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbLibelle = new javax.swing.JLabel();
        edLibelle = new javax.swing.JTextField();
        btValider = new javax.swing.JButton();
        btAnnuler = new javax.swing.JButton();
        lbWarning = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setResizable(false);

        lbLibelle.setText("Libelle:");

        edLibelle.setNextFocusableComponent(btValider);

        btValider.setText("Valider");
        btValider.setNextFocusableComponent(btAnnuler);
        btValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btValiderActionPerformed(evt);
            }
        });

        btAnnuler.setText("Annuler");
        btAnnuler.setNextFocusableComponent(edLibelle);
        btAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnnulerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbLibelle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(edLibelle, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btValider, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lbWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lbLibelle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edLibelle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAnnuler)
                    .addComponent(btValider))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Méthode utilisée lorsque l'on appuie sur le bouton 'Valider'.
     *
     * @param evt
     */
    private void btValiderActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btValiderActionPerformed
    {//GEN-HEADEREND:event_btValiderActionPerformed

        if (!edLibelle.getText().equals(""))
        {
            controller.updateCategoriePrix(id, edLibelle.getText());
            controller.getCategoriePrixAllFrame().setVisible(true);
            setVisible(false);
        }
        else
        {
            lbWarning.setText("Le champs libellé est requis.");
        }
    }//GEN-LAST:event_btValiderActionPerformed

    /**
     * Méthode utilisée lorsque l'on appuie sur le bouton 'Annuler'.
     * @param evt 
     */
    private void btAnnulerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btAnnulerActionPerformed
    {//GEN-HEADEREND:event_btAnnulerActionPerformed
        edLibelle.setEditable(true);
        btValider.setVisible(true);
        btAnnuler.setText("Annuler");
        setVisible(false);
    }//GEN-LAST:event_btAnnulerActionPerformed

    /**
     * Surcharge de la méthode setVisible(boolean b).
     * @param b 
     */
    @Override
    public void setVisible(boolean b)
    {
        if (b)
        {
            setLocationRelativeTo(controller.getCategoriePrixAllFrame());
            lbWarning.setText("");
        }
        super.setVisible(b);
    }

    /**
     * Met à jour la vue avec les valeurs à utiliser.
     * @param id
     * @param libelle
     * @param mode 
     */
    public void setValues(int id, String libelle, int mode)
    {
        this.id = id;
        this.mode = mode;

        switch (mode)
        {
            case V_Main.MODE_AJOUT:
                edLibelle.setText("");
                setTitle("Ajout d'une nouvelle catégorie de prix");
                break;
            case V_Main.MODE_EDITION:
                setTitle("Edition de la catégorie de prix " + id);
                edLibelle.setText(libelle);
                break;
            default:
                setTitle("Consultation de la catégorie de prix " + id);
                edLibelle.setText(libelle);
                edLibelle.setEditable(false);
                btValider.setVisible(false);
                btAnnuler.setText("Fermer");
                break;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnnuler;
    private javax.swing.JButton btValider;
    private javax.swing.JTextField edLibelle;
    private javax.swing.JLabel lbLibelle;
    private javax.swing.JLabel lbWarning;
    // End of variables declaration//GEN-END:variables
}
